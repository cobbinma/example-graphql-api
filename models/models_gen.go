// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"fmt"
	"io"
	"strconv"
)

type ItemStatus string

const (
	ItemStatusUnavailable ItemStatus = "UNAVAILABLE"
	ItemStatusHidden      ItemStatus = "HIDDEN"
)

var AllItemStatus = []ItemStatus{
	ItemStatusUnavailable,
	ItemStatusHidden,
}

func (e ItemStatus) IsValid() bool {
	switch e {
	case ItemStatusUnavailable, ItemStatusHidden:
		return true
	}
	return false
}

func (e ItemStatus) String() string {
	return string(e)
}

func (e *ItemStatus) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = ItemStatus(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid ItemStatus", str)
	}
	return nil
}

func (e ItemStatus) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
